// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int           @id @default(autoincrement())
  username String
  password String

  incomes  ItemIncome[]
}


model Category {
  id        Int     @id @default(autoincrement())
  name      String
  items     Item[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Item {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  category_id  Int
  current_stock Int

  category     Category      @relation(fields: [category_id], references: [id])
  incomes      ItemIncome[]
  outcomes     ItemOutcome[]

  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model ItemIncome {
  id          Int       @id @default(autoincrement())
  item_id     Int
  quantity    Int
  unit_price  Float
  total_price Float
  date        DateTime
  user_id     Int

  item        Item      @relation(fields: [item_id], references: [id])
  user        User      @relation(fields: [user_id], references: [id])

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model ItemOutcome {
  id          Int       @id @default(autoincrement())
  item_id     Int
  quantity    Int
  reason      String
  date        DateTime

  item        Item      @relation(fields: [item_id], references: [id])

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}